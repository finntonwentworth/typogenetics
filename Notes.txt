
The user enters a string. 
I check that it is valid 
Once that is done, I determine the instructions and therefore the folding pattern of the string 
To do this, I scan the elements of the user's string 2 bases at a time, and decode an instruction. 
I store the instructions and folding pattern in elements of a struct

I want the decoding function to return a struct whose elements are two arrays: 
	The list of instructions
	The folding pattern
I can store these returned values into my user_strand struct 

Then I can have a function which accepts the folding pattern to determine the starting position
Once the starting position is determined, I begin executing instructions sequentially starting on that base  
A function will read in 3 elements of the instruction array, determine the relevant instruction, then call the function
	hmm this will need some thinking- don't do a huge conditional 
	I have instead provided an instruction number as an array - each instruction is codified by a number 
		prevents the need of reading in array values 



TO DO: 

change functions: 

instead of going until null '\0'
compute # of relevant elements (rolls off the tongue) and pass that in as an argument
then I can use computed # of elements mod 2 to determine if there is a last element